# Ain Oman — Real Estate Management Platform

## المشروع الحالي - تحديث 2025-01-04

### 🏗️ **البنية الأساسية**
- **Framework**: Next.js 15.4.6 with Pages Router
- **Database**: JSON-based storage (`.data/db.json`)
- **Styling**: Tailwind CSS
- **Language**: TypeScript
- **Port**: 3000 (أو 3001 إذا كان 3000 مشغول)

### 📁 **هيكل المشروع الرئيسي**

```
src/
├── pages/                    # صفحات Next.js
│   ├── api/                 # API Routes
│   ├── admin/               # لوحة الإدارة
│   ├── properties/          # إدارة العقارات
│   ├── dashboard/           # لوحات التحكم
│   └── ...
├── components/              # مكونات React
│   ├── layout/             # مكونات التخطيط
│   ├── admin/              # مكونات الإدارة
│   ├── properties/         # مكونات العقارات
│   └── ...
├── server/                 # منطق الخادم
│   └── properties/         # إدارة بيانات العقارات
├── db/                     # قاعدة البيانات
│   └── jsonDb.ts          # عمليات قاعدة البيانات
└── lib/                    # مكتبات مساعدة
```

### 🚀 **الصفحات الرئيسية**

#### **إدارة العقارات**
- `http://localhost:3000/properties/unified-management` - إدارة شاملة للعقارات
- `http://localhost:3000/properties/new` - إضافة عقار جديد (5 خطوات)
- `http://localhost:3000/properties/[id]` - تفاصيل العقار
- `http://localhost:3000/properties/[id]/edit` - تعديل العقار
- `http://localhost:3000/properties/[id]/admin` - إدارة العقار

#### **لوحة الإدارة**
- `http://localhost:3000/admin/bookings` - إدارة الحجوزات
- `http://localhost:3000/admin/tasks` - إدارة المهام
- `http://localhost:3000/admin/properties` - إدارة العقارات

#### **لوحات التحكم**
- `http://localhost:3000/dashboard` - لوحة التحكم الرئيسية
- `http://localhost:3000/profile/bookings` - حجوزات المستخدم

### 🛠️ **الميزات المطورة**

#### **نظام إضافة العقارات (5 خطوات)**
1. **المعلومات الأساسية**: العنوان، النوع، الغرض
2. **نوع المبنى**: وحدة واحدة أو متعددة الوحدات
3. **الموقع والتفاصيل**: الموقع، العمر، المساحة
4. **المزايا والخدمات**: المرافق، طرق الدفع، الوسائط
5. **الوحدات والمعلومات الإضافية**: تفاصيل الوحدات، الخريطة، جهات الاتصال

#### **نظام إدارة العقارات**
- عرض العقارات في جدول أو شبكة
- فلترة وترتيب متقدم
- إحصائيات ذكية
- توصيات AI
- إجراءات سريعة

#### **نظام المهام**
- إدارة المهام المتعلقة بالعقارات
- تتبع الحالة والتقدم
- إشعارات وإحالات

### 🔧 **المشاكل المعروفة**

#### **مشكلة عرض تفاصيل العقار**
- **المشكلة**: صفحات `http://localhost:3000/properties/[id]` و `http://localhost:3000/properties/[id]/admin` تظهر "لم يتم العثور على العقار"
- **السبب**: مشكلة في hydration mismatch بين الخادم والعميل
- **الحل المطبق**: إصلاح منطق تنظيف البيانات في `getServerSideProps`
- **الحالة**: تحتاج مراجعة إضافية

#### **مشاكل أخرى**
- تحذيرات Tailwind CSS في التكوين
- صفحات مكررة: `src/pages/calendar.tsx` و `src/pages/calendar/index.tsx`
- ملفات logo.png مفقودة (404 errors)

### 📊 **قاعدة البيانات**

#### **هيكل البيانات**
```json
{
  "properties": [
    {
      "id": "P-20251004001554",
      "titleAr": "عمان",
      "titleEn": "Oman",
      "priceOMR": "500",
      "province": "الباطنة",
      "state": "شناص",
      "images": ["/uploads/properties/..."],
      "published": true,
      "status": "hidden",
      "units": []
    }
  ]
}
```

#### **مشاكل الترميز**
- بعض البيانات محفوظة في arrays بدلاً من strings
- مشاكل في ترميز النصوص العربية
- حاجة لتنظيف البيانات عند القراءة

### 🚀 **تشغيل المشروع**

```bash
# تثبيت التبعيات
npm install

# تشغيل الخادم
npm run dev

# الوصول للموقع
http://localhost:3000
```

### 🔄 **إعادة بناء المشروع (لحل مشاكل البناء)**

```bash
# إيقاف الخادم
taskkill /F /IM node.exe

# حذف مجلد البناء
Remove-Item -Path ".next" -Recurse -Force

# حذف الـ cache
Remove-Item -Path "node_modules\.cache" -Recurse -Force

# إعادة التشغيل
npm run dev
```

### 📝 **ملاحظات مهمة**

1. **البيانات**: جميع البيانات محفوظة في `.data/db.json`
2. **الصور**: محفوظة في `public/uploads/properties/`
3. **الترجمة**: نظام i18n متكامل للعربية والإنجليزية
4. **التصميم**: Tailwind CSS مع دعم RTL
5. **API**: جميع العمليات تتم عبر API Routes

### 🎯 **الخطوات التالية**

1. **حل مشكلة عرض العقارات**: مراجعة شاملة لـ hydration
2. **تحسين الأداء**: تحسين استعلامات قاعدة البيانات
3. **إضافة المزيد من الميزات**: نظام الدفع، الإشعارات
4. **تحسين التصميم**: واجهة مستخدم أكثر تطوراً
5. **اختبار شامل**: اختبار جميع الوظائف

### 📞 **الدعم**

للمساعدة في حل المشاكل:
1. مراجعة logs في الـ terminal
2. فحص ملفات `.data/db.json`
3. التأكد من صحة مسارات الملفات
4. إعادة بناء المشروع عند الحاجة

---

**آخر تحديث**: 2025-01-04
**الحالة**: في التطوير - يحتاج مراجعة شاملة